Found one Java-level deadlock:
=============================
"pool-1-thread-1":
  waiting to lock monitor 0x00006000019004e0 (object 0x0000000787dde258, a java.lang.Object),
  which is held by "pool-1-thread-2"

"pool-1-thread-2":
  waiting to lock monitor 0x00006000019005b0 (object 0x0000000787dde248, a java.lang.Object),
  which is held by "pool-1-thread-1"

Java stack information for the threads listed above:
===================================================
"pool-1-thread-1":
	at ConcurrencyInPractice.Deadlock.DeadLockTest.lambda$main$0(DeadLockTest.java:18)
	- waiting to lock <0x0000000787dde258> (a java.lang.Object)
	- locked <0x0000000787dde248> (a java.lang.Object)
	at ConcurrencyInPractice.Deadlock.DeadLockTest$$Lambda$15/0x0000000800c01a08.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(java.base@17.0.5/Executors.java:539)
	at java.util.concurrent.FutureTask.run(java.base@17.0.5/FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@17.0.5/ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@17.0.5/ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(java.base@17.0.5/Thread.java:833)
"pool-1-thread-2":
	at ConcurrencyInPractice.Deadlock.DeadLockTest.lambda$main$1(DeadLockTest.java:32)
	- waiting to lock <0x0000000787dde248> (a java.lang.Object)
	- locked <0x0000000787dde258> (a java.lang.Object)
	at ConcurrencyInPractice.Deadlock.DeadLockTest$$Lambda$16/0x0000000800c01c28.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(java.base@17.0.5/Executors.java:539)
	at java.util.concurrent.FutureTask.run(java.base@17.0.5/FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@17.0.5/ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@17.0.5/ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(java.base@17.0.5/Thread.java:833)

Found 1 deadlock.