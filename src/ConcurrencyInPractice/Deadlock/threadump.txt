2023-04-10 15:38:05
Full thread dump Java HotSpot(TM) 64-Bit Server VM (17.0.5+9-LTS-191 mixed mode, sharing):

Threads class SMR info:
_java_thread_list=0x000060000221d520, length=15, elements={
0x00007fabec00be00, 0x00007fabec895400, 0x00007fabed813400, 0x00007fabed813a00,
0x00007fabed814a00, 0x00007fabed815000, 0x00007fabed817c00, 0x00007fabed818200,
0x00007fabec026600, 0x00007fabec118a00, 0x00007fabec027400, 0x00007fabec119600,
0x00007fabec08fc00, 0x00007fabed817200, 0x00007fabec00b200
}

"Reference Handler" #2 daemon prio=10 os_prio=31 cpu=0.55ms elapsed=74.58s tid=0x00007fabec00be00 nid=0x3f03 waiting on condition  [0x000070000c69b000]
   java.lang.Thread.State: RUNNABLE
	at java.lang.ref.Reference.waitForReferencePendingList(java.base@17.0.5/Native Method)
	at java.lang.ref.Reference.processPendingReferences(java.base@17.0.5/Reference.java:253)
	at java.lang.ref.Reference$ReferenceHandler.run(java.base@17.0.5/Reference.java:215)

"Finalizer" #3 daemon prio=8 os_prio=31 cpu=0.87ms elapsed=74.58s tid=0x00007fabec895400 nid=0x4303 in Object.wait()  [0x000070000c79e000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(java.base@17.0.5/Native Method)
	- waiting on <0x0000000787f02f30> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@17.0.5/ReferenceQueue.java:155)
	- locked <0x0000000787f02f30> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@17.0.5/ReferenceQueue.java:176)
	at java.lang.ref.Finalizer$FinalizerThread.run(java.base@17.0.5/Finalizer.java:172)

"Signal Dispatcher" #4 daemon prio=9 os_prio=31 cpu=0.38ms elapsed=74.56s tid=0x00007fabed813400 nid=0x5903 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Service Thread" #5 daemon prio=9 os_prio=31 cpu=0.08ms elapsed=74.56s tid=0x00007fabed813a00 nid=0x5a03 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Monitor Deflation Thread" #6 daemon prio=9 os_prio=31 cpu=2.35ms elapsed=74.56s tid=0x00007fabed814a00 nid=0xa303 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread0" #7 daemon prio=9 os_prio=31 cpu=92.09ms elapsed=74.56s tid=0x00007fabed815000 nid=0xa203 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"C1 CompilerThread0" #9 daemon prio=9 os_prio=31 cpu=122.48ms elapsed=74.56s tid=0x00007fabed817c00 nid=0xa003 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"Sweeper thread" #10 daemon prio=9 os_prio=31 cpu=0.13ms elapsed=74.55s tid=0x00007fabed818200 nid=0x5d03 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Common-Cleaner" #11 daemon prio=8 os_prio=31 cpu=0.29ms elapsed=74.50s tid=0x00007fabec026600 nid=0x5e03 in Object.wait()  [0x000070000cfb9000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(java.base@17.0.5/Native Method)
	- waiting on <0x0000000787fca998> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(java.base@17.0.5/ReferenceQueue.java:155)
	- locked <0x0000000787fca998> (a java.lang.ref.ReferenceQueue$Lock)
	at jdk.internal.ref.CleanerImpl.run(java.base@17.0.5/CleanerImpl.java:140)
	at java.lang.Thread.run(java.base@17.0.5/Thread.java:833)
	at jdk.internal.misc.InnocuousThread.run(java.base@17.0.5/InnocuousThread.java:162)

"Monitor Ctrl-Break" #12 daemon prio=5 os_prio=31 cpu=46.39ms elapsed=74.29s tid=0x00007fabec118a00 nid=0x5f03 runnable  [0x000070000d0bc000]
   java.lang.Thread.State: RUNNABLE
	at sun.nio.ch.SocketDispatcher.read0(java.base@17.0.5/Native Method)
	at sun.nio.ch.SocketDispatcher.read(java.base@17.0.5/SocketDispatcher.java:47)
	at sun.nio.ch.NioSocketImpl.tryRead(java.base@17.0.5/NioSocketImpl.java:261)
	at sun.nio.ch.NioSocketImpl.implRead(java.base@17.0.5/NioSocketImpl.java:312)
	at sun.nio.ch.NioSocketImpl.read(java.base@17.0.5/NioSocketImpl.java:350)
	at sun.nio.ch.NioSocketImpl$1.read(java.base@17.0.5/NioSocketImpl.java:803)
	at java.net.Socket$SocketInputStream.read(java.base@17.0.5/Socket.java:966)
	at sun.nio.cs.StreamDecoder.readBytes(java.base@17.0.5/StreamDecoder.java:270)
	at sun.nio.cs.StreamDecoder.implRead(java.base@17.0.5/StreamDecoder.java:313)
	at sun.nio.cs.StreamDecoder.read(java.base@17.0.5/StreamDecoder.java:188)
	- locked <0x0000000787c89878> (a java.io.InputStreamReader)
	at java.io.InputStreamReader.read(java.base@17.0.5/InputStreamReader.java:177)
	at java.io.BufferedReader.fill(java.base@17.0.5/BufferedReader.java:162)
	at java.io.BufferedReader.readLine(java.base@17.0.5/BufferedReader.java:329)
	- locked <0x0000000787c89878> (a java.io.InputStreamReader)
	at java.io.BufferedReader.readLine(java.base@17.0.5/BufferedReader.java:396)
	at com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:56)

"Notification Thread" #13 daemon prio=9 os_prio=31 cpu=0.12ms elapsed=74.29s tid=0x00007fabec027400 nid=0x9c03 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"pool-1-thread-1" #14 prio=5 os_prio=31 cpu=26.31ms elapsed=74.26s tid=0x00007fabec119600 nid=0x6103 waiting for monitor entry  [0x000070000d3c5000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at ConcurrencyInPractice.Deadlock.DeadLockTest.lambda$main$0(DeadLockTest.java:18)
	- waiting to lock <0x0000000787dde258> (a java.lang.Object)
	- locked <0x0000000787dde248> (a java.lang.Object)
	at ConcurrencyInPractice.Deadlock.DeadLockTest$$Lambda$15/0x0000000800c01a08.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(java.base@17.0.5/Executors.java:539)
	at java.util.concurrent.FutureTask.run(java.base@17.0.5/FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@17.0.5/ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@17.0.5/ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(java.base@17.0.5/Thread.java:833)

"pool-1-thread-2" #15 prio=5 os_prio=31 cpu=28.43ms elapsed=74.26s tid=0x00007fabec08fc00 nid=0x9803 waiting for monitor entry  [0x000070000d4c8000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at ConcurrencyInPractice.Deadlock.DeadLockTest.lambda$main$1(DeadLockTest.java:32)
	- waiting to lock <0x0000000787dde248> (a java.lang.Object)
	- locked <0x0000000787dde258> (a java.lang.Object)
	at ConcurrencyInPractice.Deadlock.DeadLockTest$$Lambda$16/0x0000000800c01c28.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(java.base@17.0.5/Executors.java:539)
	at java.util.concurrent.FutureTask.run(java.base@17.0.5/FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@17.0.5/ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@17.0.5/ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(java.base@17.0.5/Thread.java:833)

"DestroyJavaVM" #16 prio=5 os_prio=31 cpu=228.07ms elapsed=74.26s tid=0x00007fabed817200 nid=0x1803 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Attach Listener" #17 daemon prio=9 os_prio=31 cpu=1.01ms elapsed=0.11s tid=0x00007fabec00b200 nid=0x5807 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"VM Thread" os_prio=31 cpu=4.06ms elapsed=74.59s tid=0x00007fabeb907400 nid=0x4503 runnable  

"GC Thread#0" os_prio=31 cpu=0.18ms elapsed=74.61s tid=0x00007fabeb8068c0 nid=0x5003 runnable  

"G1 Main Marker" os_prio=31 cpu=0.07ms elapsed=74.61s tid=0x00007fabeb905350 nid=0x3303 runnable  

"G1 Conc#0" os_prio=31 cpu=0.07ms elapsed=74.61s tid=0x00007fabeb905bd0 nid=0x4c03 runnable  

"G1 Refine#0" os_prio=31 cpu=0.08ms elapsed=74.61s tid=0x00007fabeb807e70 nid=0x3603 runnable  

"G1 Service" os_prio=31 cpu=14.14ms elapsed=74.61s tid=0x00007fabeb808840 nid=0x3703 runnable  

"VM Periodic Task Thread" os_prio=31 cpu=53.07ms elapsed=74.28s tid=0x00007fabeb90d590 nid=0x9b03 waiting on condition  

JNI global refs: 14, weak refs: 0


Found one Java-level deadlock:
=============================
"pool-1-thread-1":
  waiting to lock monitor 0x00006000019004e0 (object 0x0000000787dde258, a java.lang.Object),
  which is held by "pool-1-thread-2"

"pool-1-thread-2":
  waiting to lock monitor 0x00006000019005b0 (object 0x0000000787dde248, a java.lang.Object),
  which is held by "pool-1-thread-1"

Java stack information for the threads listed above:
===================================================
"pool-1-thread-1":
	at ConcurrencyInPractice.Deadlock.DeadLockTest.lambda$main$0(DeadLockTest.java:18)
	- waiting to lock <0x0000000787dde258> (a java.lang.Object)
	- locked <0x0000000787dde248> (a java.lang.Object)
	at ConcurrencyInPractice.Deadlock.DeadLockTest$$Lambda$15/0x0000000800c01a08.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(java.base@17.0.5/Executors.java:539)
	at java.util.concurrent.FutureTask.run(java.base@17.0.5/FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@17.0.5/ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@17.0.5/ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(java.base@17.0.5/Thread.java:833)
"pool-1-thread-2":
	at ConcurrencyInPractice.Deadlock.DeadLockTest.lambda$main$1(DeadLockTest.java:32)
	- waiting to lock <0x0000000787dde248> (a java.lang.Object)
	- locked <0x0000000787dde258> (a java.lang.Object)
	at ConcurrencyInPractice.Deadlock.DeadLockTest$$Lambda$16/0x0000000800c01c28.run(Unknown Source)
	at java.util.concurrent.Executors$RunnableAdapter.call(java.base@17.0.5/Executors.java:539)
	at java.util.concurrent.FutureTask.run(java.base@17.0.5/FutureTask.java:264)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@17.0.5/ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@17.0.5/ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(java.base@17.0.5/Thread.java:833)

Found 1 deadlock.

